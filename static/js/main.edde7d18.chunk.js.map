{"version":3,"sources":["components/ImageGallery/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/ImageGallery/ImageGallery.module.css","components/Notification/Notification.module.css","components/ImageGallery/LoadMore/LoadMore.module.css","components/Modal/Modal.js","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.js","components/Notification/Notification.js","js/apiService.js","components/ImageGallery/LoadMore/LoadMore.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","App.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","modalRoot","document","querySelector","Modal","closeModal","e","console","log","Date","now","code","props","onClose","target","currentTarget","window","addEventListener","this","removeEventListener","src","alt","createPortal","className","s","Overlay","onClick","Component","ImageGalleryItem","largeImageURL","useState","showModal","setShowModal","toggleModal","ImageGalleryItemImage","Notification","message","ApiService","optionsObj","options","BASE_URL","defaultOptions","page","per_page","key","searchQuery","url","fetch","response","json","then","hits","getUrl","fetchImages","LoadMore","type","Button","loadMore","Status","apiService","ImageGallery","status","setStatus","gallery","setGallery","scroll","useRef","useEffect","current","fetchImagesOnSearch","useLayoutEffect","length","scrollTo","top","behavior","documentElement","scrollHeight","color","map","id","webformatURL","tags","a","getImages","images","justFetchedImages","Searchbar","onSubmit","setSearchQuery","form","preventDefault","searchFormQuery","trim","toast","toLowerCase","button","label","input","autoComplete","autoFocus","placeholder","onChange","value","App","submitedSearchQuery","setSubmitedSearchQuery","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.edde7d18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2Io_U\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__lkrR0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__3QgOd\",\"Modal\":\"Modal_Modal__2iHUx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__V_a77\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__1CQjm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"LoadMore_Button__2YfU6\"};","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { createPortal } from 'react-dom';\r\n\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nclass Modal extends Component {\r\n\r\n    componentDidMount(){\r\n        window.addEventListener('keydown', this.closeModal);\r\n    }\r\n\r\n    componentWillUnmount() { \r\n        window.removeEventListener('keydown', this.closeModal);\r\n    }\r\n\r\n    closeModal = (e) => {\r\n        console.log(\"close MODAL\", Date.now());\r\n        if (e.code === 'Escape') this.props.onClose();\r\n        \r\n        if(e.target === e.currentTarget) this.props.onClose();\r\n    }\r\n\r\n    render() {\r\n        const { src, alt} = this.props;\r\n        return createPortal(\r\n            <div className={s.Overlay} onClick={this.closeModal}>\r\n                <div className={s.Modal}>\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>,\r\n            modalRoot\r\n        )\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Modal\r\n\r\n","import {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport s from './ImageGalleryItem.module.css';\r\nimport Modal from '../../Modal/Modal';\r\n\r\nexport default function ImageGalleryItem({src,largeImageURL,alt}) { \r\n    const [showModal, setShowModal] = useState(false);\r\n\r\n    const toggleModal = () => {\r\n        setShowModal(!showModal);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <li className={s.ImageGalleryItem}>\r\n                <img src={src} alt={alt} onClick={toggleModal} className={s.ImageGalleryItemImage} />    \r\n            </li>\r\n            {\r\n                showModal && <Modal src={largeImageURL} alt={alt} onClose={toggleModal}/>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n}","import PropTypes from 'prop-types'\r\nimport s from './Notification.module.css'\r\n\r\nfunction Notification({message}) {\r\n    return (\r\n        <p className={s.message}>\r\n            {message}\r\n        </p>\r\n    )\r\n}\r\n\r\nNotification.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Notification","export default class ApiService {\r\n\r\n    constructor(optionsObj){ \r\n        this.options = {\r\n            BASE_URL: 'https://pixabay.com/api/',\r\n            defaultOptions: 'image_type=photo&orientation=horizontal',\r\n            page: 1,\r\n            per_page: 12,\r\n            key: '19030678-ed1e5f4c74f32611df53e834e',\r\n            ...optionsObj\r\n        }\r\n    }\r\n    \r\n    getUrl() {\r\n        const { BASE_URL, defaultOptions, searchQuery, page, per_page, key } = this.options;\r\n        const url = `${BASE_URL}?${defaultOptions}&q=${searchQuery}&page=${page}&per_page=${per_page}&key=${key}`;\r\n        return url;\r\n    }\r\n    async fetchImages(url) { \r\n        // return fetch(url)\r\n        //     .then(response => response.json())\r\n        //     .then(({hits}) => { \r\n        //         this.options.page += 1;\r\n        //         return hits;\r\n        //     })\r\n        //     .catch(console.log);\r\n        try {\r\n            const response = await fetch(url);\r\n            this.options.page += 1;\r\n            return response.json()\r\n                .then(({ hits }) => hits);\r\n        }\r\n        catch (error) {\r\n            console.log(\"Ошибка КЕЧ\", error);\r\n        }\r\n    }\r\n            \r\n    getImages(searchQuery) {\r\n\r\n        if (searchQuery) {\r\n            this.options.searchQuery = searchQuery;\r\n            this.options.page = 1;\r\n        }\r\n            \r\n        \r\n        const url = this.getUrl();\r\n\r\n         return this.fetchImages(url);\r\n    }\r\n}\r\n    \r\n    \r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './LoadMore.module.css';\r\n\r\n\r\nexport default function LoadMore(props) {\r\n\r\n    function onClick() {\r\n        props.loadMore();\r\n    }\r\n\r\n        return (\r\n            <>\r\n                <button type=\"button\" className={s.Button} onClick={onClick}>Load More</button>\r\n            </>\r\n        )\r\n\r\n}\r\n\r\n    LoadMore.propTypes = {\r\n        loadMore: PropTypes.func.isRequired,\r\n    }","import { useState, useEffect, useLayoutEffect, useRef } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nimport ImageGalleryItem from './ImageGalleryItem/ImageGalleryItem';\r\nimport s from './ImageGallery.module.css';\r\n\r\nimport Notification from '../Notification/Notification';\r\n\r\nimport ApiService from '../../js/apiService';\r\nimport LoadMore from './LoadMore/LoadMore';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nconst   apiService = new ApiService();\r\n\r\nexport default function ImageGallery({searchQuery}){\r\n\r\n    const [status, setStatus] = useState(Status.IDLE);\r\n    const [gallery, setGallery] = useState([]);\r\n\r\n    const scroll = useRef(0);\r\n\r\n\r\n    useEffect(() => {\r\n        scroll.current = 0;\r\n        setGallery([]);\r\n        fetchImagesOnSearch(searchQuery);\r\n    }, [searchQuery]);\r\n\r\n    useLayoutEffect(() => {\r\n        if (!gallery.length) return; \r\n\r\n        window.scrollTo({\r\n            top: scroll.current,\r\n            behavior: \"smooth\",\r\n         });\r\n\r\n        scroll.current = document.documentElement.scrollHeight - document.querySelector('#searchbar').scrollHeight;\r\n    },[gallery]);\r\n\r\n\r\n    if (Status.IDLE === status) return <Notification message='Something went wrong ¯\\_(ツ)_/¯' />;\r\n    if (Status.REJECTED === status && !gallery.length) return <Notification message='Nothing founded...' />;\r\n    return (\r\n        <>\r\n            {(Status.PENDING === status) && <Loader type='Rings' color=\"#bfbfbf\" className=\"loader\" />}\r\n            {\r\n\r\n                <>\r\n                    <ul className={s.ImageGallery}>\r\n                        {gallery.map(\r\n                            ({ id, webformatURL, largeImageURL, tags }) =>\r\n                            (<ImageGalleryItem key={id}\r\n                                src={webformatURL}\r\n                                largeImageURL={largeImageURL}\r\n                                alt={tags}\r\n                            />)\r\n                        )}\r\n                    </ul>\r\n                        \r\n                    {(Status.RESOLVED === status) && < LoadMore loadMore={fetchImagesOnSearch} />}\r\n\r\n                    {(Status.REJECTED === status) && <Notification message='There are no more images....' />}\r\n                </>\r\n            }\r\n        </>\r\n    );    \r\n\r\n    async function fetchImagesOnSearch(searchQuery) {\r\n\r\n        setStatus(Status.PENDING);\r\n\r\n        //   console.log('фетчим запрос : ', this.props.searchQuery);\r\n        const justFetchedImages = await apiService.getImages(searchQuery)\r\n            .then(images => images);\r\n\r\n        // //если бекэндотдал пустой массив\r\n        if (!justFetchedImages.length) {\r\n            setStatus(Status.REJECTED);\r\n            return;\r\n        }\r\n\r\n        // // console.log(\" бекэндотдал НЕ пустой массив\");\r\n        setGallery(gallery => [...gallery, ...justFetchedImages]);\r\n        setStatus(Status.RESOLVED);\r\n    }\r\n\r\n}\r\n\r\nImageGallery.propTypes = {\r\n        searchQuery: PropTypes.string.isRequired,\r\n}\r\n","import { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport s from './Searchbar.module.css';\r\n\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n\r\n    const submitForm = (e) => {\r\n        e.preventDefault();\r\n        const searchFormQuery = searchQuery.trim();\r\n\r\n        // searchQuery - is emty\r\n        if (!searchFormQuery) {\r\n            toast(\"to finds some, needs type some\");\r\n            setSearchQuery('');\r\n            return;\r\n        }\r\n\r\n\r\n        onSubmit(searchFormQuery.toLowerCase());\r\n    }\r\n\r\n     return (\r\n                    <>\r\n                        <header className={s.Searchbar} id=\"searchbar\">\r\n                 <form className={s.form}\r\n                     onSubmit={submitForm}\r\n                 >\r\n                                <button type=\"submit\" className={s.button}>\r\n                                    <span className={s.label}>Search</span>\r\n                                </button>\r\n\r\n                                <input\r\n                                    className={s.input}\r\n                                    type=\"text\"\r\n                                    autoComplete=\"off\"\r\n                                    autoFocus\r\n                                    placeholder=\"Search images and photos\"\r\n                                    onChange={e=>setSearchQuery(e.target.value)}\r\n                                    value={searchQuery}\r\n                                />\r\n                            </form>\r\n             </header>\r\n                   <ToastContainer/>\r\n         </>\r\n         \r\n        )\r\n}\r\n\r\nSearchbar.propTypes = {\r\n    onSubmit: PropTypes.func.isRequired,\r\n}","import { useState } from 'react';\n\nimport ImageGallery from './components/ImageGallery/ImageGallery'\nimport Searchbar from './components/Searchbar/Searchbar'\n\nexport default function App() {\n\n  const [submitedSearchQuery, setSubmitedSearchQuery] = useState('');\n\n  return (\n    <>\n      <div className=\"App\">\n        <Searchbar onSubmit={setSubmitedSearchQuery} />\n\n           {\n             submitedSearchQuery\n             &&\n             <ImageGallery searchQuery={submitedSearchQuery}/>\n           }\n      </div>\n    </>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__PZa_t\",\"form\":\"Searchbar_form__Jh-jl\",\"button\":\"Searchbar_button__2HdUq\",\"label\":\"Searchbar_label__2a5Xh\",\"input\":\"Searchbar_input__2y6dM\"};"],"sourceRoot":""}